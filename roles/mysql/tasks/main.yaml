- name: Install MySQL server
  ansible.builtin.apt:
    name: mysql-server
    state: present

- name: Install Python MySQL client
  ansible.builtin.apt:
    name: python3-pymysql
    state: present
  become: true

- name: Add MySQL bind address override
  ansible.builtin.template:
    src: override.cnf.j2
    dest: /etc/mysql/mysql.conf.d/override.cnf
  notify: Restart MySQL

- name: Ensure MySQL is running and enabled
  ansible.builtin.service:
    name: mysql
    state: started
    enabled: yes

- name: MySQL database
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: MySQL user
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    host: "%"
    priv: "{{ mysql_database }}.*:ALL"
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Create cnf template
  ansible.builtin.template:
    src: .my.cnf.j2
    dest: /var/lib/prometheus/.my.cnf
    owner: prometheus
    group: prometheus
    mode: '0600'
  notify: Restart MySQL Exporter

- name: Create Prometheus Exporter template
  ansible.builtin.template:
    src: mysql_metric.yaml.j2
    dest: /etc/default/prometheus-mysqld-exporter
    mode: '0755'
  notify: Restart MySQL Exporter

- name: Install MySQL exporter
  ansible.builtin.apt:
    name: prometheus-mysqld-exporter
    state: present

- name: Ensure MySQL exporter user exists
  community.mysql.mysql_user:
    name: "{{ exporter_user }}"
    password: "{{ exporter_password }}"
    priv: "*.*:PROCESS,REPLICATION CLIENT,SELECT"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    state: present
  notify: Restart MySQL Exporter

- name: Ensure mysql exporter running and enabled
  ansible.builtin.service:
    name: prometheus-mysqld-exporter
    state: started
    enabled: true

- name: Create /home/backup/mysql directory
  ansible.builtin.file:
    path: /home/backup/mysql
    state: directory
    owner: backup
    group: backup
    mode: '0755'

- name: Ensure MySQL backup user exist
  community.mysql.mysql_user:
    name: "{{ backup_user }}"
    password: "{{ backup_password }}"
    priv: "{{ mysql_database }}.*: SELECT, LOCK TABLES, SELECT"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    state: present

- name: Create backup template
  ansible.builtin.template:
    src: backup.my.conf
    dest: /home/backup/.my.cnf
    
- name: Create Cron Backup
  ansible.builtin.template:
    src: mysql.backup.cron.j2
    dest: /etc/cron.d/mysql.backup
    owner: backup 
    

